plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.keep'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // WebSocket + STOMP 메시징
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // → spring-websocket, spring-messaging 모두 트랜싯으로 들어옵니다.

    implementation 'org.hibernate.orm:hibernate-community-dialects:6.6.11.Final'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    runtimeOnly   'com.oracle.database.jdbc:ojdbc11'

    compileOnly   'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
// --- 여기에 추가 ---
sourceSets {
    main {
        java {
            // Gradle이 annotationProcessor 에서 만든 소스파일을 컴파일 대상에 포함하도록
            srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}


compileJava {  
	options.compilerArgs << '-parameters'
}

tasks.named('test') {
    useJUnitPlatform()
}
